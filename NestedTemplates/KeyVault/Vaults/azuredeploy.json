{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "parametersKeyVault":{
      "type": "array"
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "testkveradsf",
      "metadata": {
        "description": "Name of the Vault"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue":"43243701-7aa8-421a-a131-fed3f11104c8",
      "metadata": {
        "description": "Tenant Id of the subscription. Get using Get-AzSubscription cmdlet or Get Subscription API"
      }
    },
    "objectId": {
      "type": "string",
      "defaultValue":"ad2b9e43-a7c5-441c-9cca-cab310782acd",
      "metadata": {
        "description": "Object Id of the AD user/Group. Get using Get-AzADUser or Get-AzADServicePrincipal cmdlets"
      }
    },
    "keysPermissions": {
      "type": "array",
      "defaultValue": ["all"],
      "metadata": {
        "description": "Permissions to keys in the vault. Valid values are: all, create, import, update, get, list, delete, backup, restore, encrypt, decrypt, wrapkey, unwrapkey, sign, and verify."
      }
    },
    "secretsPermissions": {
      "type": "array",
      "defaultValue": ["all"],
      "metadata": {
        "description": "Permissions to secrets in the vault. Valid values are: all, get, set, list, and delete."
      }
    },
      "certificatePermissions": {
          "type": "array",
          "defaultValue": ["all"],
          "metadata": {
              "description": "Permissions to certificates - get, list, delete, create, import, update, managecontacts, getissuers, listissuers, setissuers, deleteissuers, manageissuers, recover, purge, backup, restore"
          }
    },
    "storagePermissions": {
      "type": "array",
      "defaultValue": ["all"],
      "metadata": {
          "description": "Permissions to storage accounts - get, list, delete, set, update, regeneratekey, recover, purge, backup, restore, setsas, listsas, getsas, deletesas"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },
    "allowedIpAddress": {
      "type":"object",
      "defaultValue": {
        "ipAddress": [
          {"value": "155.95.87.0/24"}, 
          {"value": "155.95.98.0/24"}
        ]
      },
        "metadata": {
          "description": "Allowed IP addresses"
        }        
    },
    "enableVaultForDeployment": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies if the vault is enabled for a VM deployment"
      }
    }
  },
  "variables": {
    "kvCopyVariables":{
      "copy": [
        {
          "name": "kvParams",
          "count": "[length(parameters('parametersKeyVault'))]",
          "input":{
            "kvResourceGroup": "[parameters('parametersKeyVault')[copyIndex('kvParams')].resourceGroup]",
            "kvName": "[parameters('parametersKeyVault')[copyIndex('kvParams')].keyVaultName]",
            "kvObjectId": "[parameters('parametersKeyVault')[copyIndex('kvParams')].objectId]",
            "kvTenantId": "[parameters('parametersKeyVault')[copyIndex('kvParams')].tenantId]"
          }
        }
      ]
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('kvCopyVariables').kvParams[copyIndex('kvCopyVariables')].kvName]",
      "apiVersion": "2018-02-14",
      "location": "eastus",
      "tags": {
      },
      "copy":{
        "name": "kvCopyVariables",
        "count": "[length(parameters('parametersKeyVault'))]"
    },
      "properties": {
        "enabledForDeployment": "[parameters('enableVaultForDeployment')]",
        "enabledForTemplateDeployment": "true",
        "enableSoftDelete": "true",
        "enablePurgeProtection": "true",
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('objectId')]",
            "permissions": {
              "keys": "[parameters('keysPermissions')]",
              "secrets": "[parameters('secretsPermissions')]",
              "certificates": "[parameters('certificatePermissions')]",
              "storage": "[parameters('storagePermissions')]"
            }
          }
        ],
        "sku": {
          "name": "[parameters('skuName')]",
          "family": "A"
        },
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Deny",
          "copy": [
            {
                "name": "ipRules",
                "count": "[length(parameters('allowedIpAddress').ipAddress)]",
                "input": {
                    "value": "[parameters('allowedIpAddress').ipAddress[copyIndex('ipRules')].value]"
                }
            }
          ]
        }
      }
    }
  ]
}