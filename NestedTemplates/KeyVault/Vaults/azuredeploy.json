{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "keyVaultParameters": {
        "type": "array"
      },
      "tenantId": {
        "type": "string",
        "defaultValue": "43243701-7aa8-421a-a131-fed3f11104c8",
        "metadata": {
          "description": "Tenant Id of the subscription. Get using Get-AzSubscription cmdlet or Get Subscription API"
        }
      },
      "objectId": {
        "type": "string",
        "defaultValue": "ad2b9e43-a7c5-441c-9cca-cab310782acd",
        "metadata": {
          "description": "Object Id of the AD user/Group. Get using Get-AzADUser or Get-AzADServicePrincipal cmdlets"
        }
      },
      "keysPermissions": {
        "type": "array",
        "defaultValue": [ "all" ],
        "metadata": {
          "description": "Permissions to keys in the vault. Valid values are: all, create, import, update, get, list, delete, backup, restore, encrypt, decrypt, wrapkey, unwrapkey, sign, and verify."
        }
      },
      "secretsPermissions": {
        "type": "array",
        "defaultValue": [ "all" ],
        "metadata": {
          "description": "Permissions to secrets in the vault. Valid values are: all, get, set, list, and delete."
        }
      },
      "certificatePermissions": {
        "type": "array",
        "defaultValue": [ "all" ],
        "metadata": {
          "description": "Permissions to certificates - get, list, delete, create, import, update, managecontacts, getissuers, listissuers, setissuers, deleteissuers, manageissuers, recover, purge, backup, restore"
        }
      },
      "storagePermissions": {
        "type": "array",
        "defaultValue": [ "all" ],
        "metadata": {
          "description": "Permissions to storage accounts - get, list, delete, set, update, regeneratekey, recover, purge, backup, restore, setsas, listsas, getsas, deletesas"
        }
      },
      "auditPermissions": {
        "type": "string",
        "defaultValue": "list",
        "metadata": {
          "description": "List permission to read Key Vault metadata like creattin date, expiration date, tags, and whether the object is enabled for use."
        }
      },
      "skuName": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
          "Standard",
          "Premium"
        ],
        "metadata": {
          "description": "SKU for the vault"
        }
      },
      "allowedIpAddress": {
        "type": "object",
        "defaultValue": {
          "ipAddress": [
            { "value": "155.95.87.0/24" },
            { "value": "155.95.98.0/24" }
          ]
        },
        "metadata": {
          "description": "Allowed IP addresses"
        }
      },
      "enableVaultForDeployment": {
        "type": "bool",
        "defaultValue": true,
        "allowedValues": [
          true,
          false
        ],
        "metadata": {
          "description": "Specifies if the vault is enabled for a VM deployment"
        }
      },
      "logsRetentionInDays": {
        "type": "int",
        "defaultValue": 0,
        "metadata": {
          "description": "Specifies the number of days that logs are gonna be kept. If you do not want to apply any retention policy and retain data forever, set value to 0."
        }
      },
      "storageAccountName": {
        "type": "string",
        "defaultValue": "secdevtestlarchivelogs",
        "metadata": {
          "description": "Specifies the storage account name for the log files."
        }
      },
      "storageAccountSubscription": {
        "type": "string",
        "defaultValue": "27ee075f-8fcc-4236-9bfa-998c6e1421df",
        "metadata": {
          "description": "Specifies the storage account subscription ID."
        }
      },
      "storageAccountRG": {
        "type": "string",
        "defaultValue": "AZG-SecDevTest-SecurityRG",
        "metadata": {
          "description": "Specifies the storage account's resoruce group name."
        }
      }
    },
    "variables": {
      "kvVariables": {
        "copy": [
          {
            "name": "kvParams",
            "count": "[length(parameters('keyVaultParameters'))]",
            "input": {
              "resoruceGroupName": "[parameters('keyVaultParameters')[copyIndex('kvParams')].resourceGroup]",
              "keyVaultName": "[parameters('keyVaultParameters')[copyIndex('kvParams')].keyVaultName]",
              "azureActiveDirectoryGroup": "[parameters('keyVaultParameters')[copyIndex('kvParams')].objectID]",
              "azureActiveDirectoryTenant": "[parameters('keyVaultParameters')[copyIndex('kvParams')].tenantID]"
            }
          }
        ]
      }
    },
    "resources": [
      {
        "type": "Microsoft.KeyVault/vaults",
        "name": "[variables('kvVariables').kvParams[copyIndex()].keyVaultName]",
        "apiVersion": "2018-02-14",
        "location": "[resourceGroup().location]",
        "tags": {
          "KeyVaultLogs": "[parameters('storageAccountName')]"
        },
        "properties": {
          "copy": {
            "name": "kvCopy",
            "count": "[length(parameters('keyVaultParameters'))]"
          },
          "enabledForDeployment": "[parameters('enableVaultForDeployment')]",
          "enabledForTemplateDeployment": "true",
          "enableSoftDelete": "true",
          "enablePurgeProtection": "true",
          "tenantId": "[parameters('tenantId')]",
          "accessPolicies": [
            {
              "tenantId": "[variables('kvVariables').kvParams[copyIndex()].azureActiveDirectoryTenant]",
              "objectId": "[variables('kvVariables').kvParams[copyIndex()].azureActiveDirectoryGroup]",
              "permissions": {
                "keys": "[parameters('keysPermissions')]",
                "secrets": "[parameters('secretsPermissions')]",
                "certificates": "[parameters('certificatePermissions')]",
                "storage": "[parameters('storagePermissions')]"
              }
            },
            {
              "tenantId": "[variables('kvVariables').kvParams[copyIndex()].azureActiveDirectoryTenant]",
              "objectId": "[variables('kvVariables').kvParams[copyIndex()].azureActiveDirectoryGroup]",
              "permissions": {
                "keys": "[parameters('auditPermissions')]",
                "secrets": "[parameters('auditPermissions')]",
                "certificates": "[parameters('auditPermissions')]",
                "storage": "[parameters('auditPermissions')]"
              }
            }
          ],
          "sku": {
            "name": "[parameters('skuName')]",
            "family": "A"
          },
          "networkAcls": {
            "bypass": "AzureServices",
            "defaultAction": "Deny",
            "copy": [
              {
                "name": "ipRules",
                "count": "[length(parameters('allowedIpAddress').ipAddress)]",
                "input": {
                  "value": "[parameters('allowedIpAddress').ipAddress[copyIndex('ipRules')].value]"
                }
              }
            ]
          }
        }
      }
    ]
  }